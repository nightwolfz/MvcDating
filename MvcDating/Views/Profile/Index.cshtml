@using MvcDating.Helpers
@using MvcDating.Models
@model MvcDating.Models.ProfileView

<!-- Modal -->
<div id="createMessageModal" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" style="width: 480px;">
        <div class="modal-content">
            <div class="modal-body">
                <button type="button" data-dismiss="modal" aria-hidden="true">&times;</button>
                <br/>
                @Html.Action("Create", "Messages", new { userId = Model.UserId })
            </div>
        </div>
    </div>
</div>
<!-- End -->

@{
    bool onlineStatus = MvcDating.Helpers.User.GetOnlineStatus(Model.UserId);
}

<div class="profileDetails">
    

    <h1>
        <span class="onlineBullet @(onlineStatus?"":"offline")" title="@(onlineStatus?"User is online!":"Offline")">&nbsp;</span>
         
        <span style="color: @(Model.Gender == 1 ? "#E62A75" : "#3D76CA")">@Html.DisplayFor(model => model.UserName)</span>

        @(WebSecurity.IsCurrentUser(Model.UserName) 
              ? Html.ActionLink("Edit profile", "Edit", null, new {@class = "button"}) 
              : Html.ActionLink("Send meesage", null, null, new {@class = "button", href = "#", id = "createMessageBtn", data_reveal_id = "createMessageModal"}))

    </h1>
    <div>
        @Time.GetAge(Model.Birthday) / @ProfileItems.Gender[Model.Gender]
        / @ProfileItems.Orientation[Model.Orientation]
        / @ProfileItems.Situation[Model.Situation]
        <br />
        @Html.DisplayFor(model => model.LocationCountry), @Html.DisplayFor(model => model.LocationCity)
    </div>
</div>


@foreach (var picture in Model.Pictures)
{
    <a class="thumbnail pictureModalClick" itemscope itemid="@picture.PictureId">
        @Html.Image("~/Uploads/" + picture.Thumb, "")
    </a>
    
    <!-- Modal -->
    <div id="pictureModal_@picture.PictureId" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-body">
                    <button type="button" data-dismiss="modal" aria-hidden="true">&times;</button>
                    @Html.Image("~/Uploads/" + picture.Src, "pictureImg")
                </div>
            </div>
        </div>
    </div>
    <!-- End -->
}

<script>
    $(function() {

        // Show modal picture
        $(".pictureModalClick").on("click", function() {
            window.itemModalDiv = '#pictureModal_' + $(this).attr('itemid');
            $(window.itemModalDiv).modal();
            updateModalWindowWidth(window.itemModalDiv);
        });
        
        // Show modal create message
        $("#createMessageBtn").on("click", function() {
            $("#createMessageModal").modal();
        });

        $(window).resize(function() {
            if (window.itemModalDiv) updateModalWindowWidth();
        });

        function updateModalWindowWidth() {
            setTimeout(function() {
                var itemWidth = $(window.itemModalDiv + " .modal-body img").first().width() + 22;
                $(window.itemModalDiv + " .modal-dialog").css('width', itemWidth);
            }, 200);
        }
    });
</script>




<div>
    <h4>@Html.DisplayNameFor(model => model.Summary)</h4>
    <div>
        @Html.DisplayFor(model => model.Summary)
    </div>

    @if (!Model.GoodAt.IsEmpty())
    {
        <h4>
            @Html.DisplayNameFor(model => model.GoodAt)
            @Html.Raw(Model.UserId == WebSecurity.CurrentUserId ? "<a class='button'>Edit</a>" : "")
        </h4>
        <div>
            @Html.DisplayFor(model => model.GoodAt)
        </div>
    }

    <h4>@Html.DisplayNameFor(model => model.MessageIf)</h4>
    <div>
        @Html.DisplayFor(model => model.MessageIf)
    </div>

    <h4>@Html.DisplayNameFor(model => model.UpdatedDate)</h4>
    <div>
        @Model.GetTimeAgo()
    </div>
</div>